










































































































#define
#define
#endif
#endif
#endif
#endif
#endif
#endif
#if
#if
#if
#if
#if
#if
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
#include
(cfdeci(cp,-1,&err_fd)
(void)
/*
/*
/*
/*
/*
/*
SORTVEC
VECLIST
badcheck2:
badcheck3:
badcheck:
badopen:
bclose(ifp)
bclose(ofp)
bfile
bfile
bfile
bprintf(ofp,"%s:
bprintf(ofp,"\n")
bprintf(ofp,"badcheck
bprintf(ofp,"badcheck2
bprintf(ofp,"badcheck3
bprintf(ofp,"comparing
char
char
char
char
char
char
char
char
cp
cp1
cp2
done:
else
ep
eprintf("main:
eprintf("main:
eprintf("main:
eprintf("main:
eprintf("main:
eprintf("main:
esetfd(err_fd)
extern
for
for
for
goto
goto
goto
goto
if
if
if
if
if
if
if
if
if
if
if
int
int
int
int
linebuf[len]
progname
progname,rs)
return
return
rs
rs
rs
rs
rs
rs
sortvec_free(&list1)
static
static
veclistadd(&list2,ep)
veclistfree(&list2)
veclistsort(&list2,slcmp)
while
while
while
while
write(3,"\n",1)
write(3,lp,strlen(lp))
write(4,"\n",1)
write(4,lp,strlen(lp))
{
{
}
}
}
}
}
}
comparing phase



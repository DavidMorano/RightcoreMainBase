.\"_
.TH BATCHD 1m "97/02/27" NCMP
.SH NAME
batchd \- Run the batch daemon
.SH SYNOPSIS
.B LIBDIR/batchd
[
\fB\-d\fR directory
] [
\fB\-p\fR file
] [
\fB\-t\fR time
]
.SH DESCRIPTION
The batch daemon can run several independent queues of batch jobs.
Each subdirectory under its spool directory defines one queue,
with the name of the subdirectory being the name of the queue.
Each such directory must contain a file named
\fIprofile\fP which contains information pertaining to the execution
of that queue.
.PP
Each directory is periodically searched for files beginning with the
letters ``cf''.
Characters following the cf are used for priority, jobs which compare
lower in the ascii collating sequence are executed first.
This file must be a directly executable file.
The owner and group of this file are set from the submitter of the job;
uid and gid are both set from this prior to execution of the file.
The standard input of the shell file is from /dev/null; the standard
output and error output default to being mailed back to the owner,
along with the first few lines of the command list.
Files with the letters ``of'' are output files corresponding to ``cf''
files.  When the daemon starts any ``of'' files were assumed to have
been running at the time of a crash; action is taken per the restart
parameter.
.PP
The \fIprofile\fP file contains lines of options, each line has keyword value,
separated by whitespace.
Lines starting with # are ignored.
The following keywords are recognized:
.IP exec\ 
If the option \fIoff\fP is given this queue is not examined.
If the \fIoff\fP option is set while job(s)s are running the current job(s)
is/are aborted immediately.
If \fIdrain\fP is specified the current job(s) is permitted to terminate
normally before stopping the queue.
.IP maxexec
A number indicating the maximum number of simultaneous jobs to run follows.
.IP supervisor
The name of a person to be send mail about this queue.
If this starts with a slash, it is assumed to be a filename to append to.
.IP mail\ 
A combination of the letters \fIsec\fP follow; mail is sent to the
owner of a job at the start, end, or restart after crash of a job.
.IP mailsupervisor
As for the \fImail\fP keyword, except that mail is sent
to the controller of this
queue as specified in the \fIsupervisor\fP keyword.
This may be used for a console log if the supervisor is a filename.
Note that both mail and mailsupervisor default to \fIec\fP.
If user mail is turned off, the output of the job is still always mailed back to the owner
if there is any, or the status of the job is non-zero, along
with the first few lines of the command list.
.IP loadsched
If the system 15 minute load average goes over the integer value specified
then no new jobs will be scheduled until it goes under again.
.IP loadstop
If the system 5 minute load average goes over the integer value specified
then all jobs in the queue will be sent stop signals until it again
goes below this value whereupon it will be restarted.
Note: loadstop is available only on systems with Berkeley job control
facilities.
.IP nice\ 
A number indicating the nice value to run jobs at.
.IP restart
If the system crashes while a job in this queue is running,
run the job again on reboot.
In any case, an error message will be sent to the user.
.IP minfree
This is followed by two arguments: the name of a file (or directory)
and a number.
If the number is nonzero and the free disk space (in 1K byte units)
on the device which contains the file is less than the number
then no new jobs will be scheduled.
(Note: the number of queues that can have a minfree value specified
is limited by the maximum number of open files allowed by the system).
.IP timestop\ 
The queue is to be active only during the time period specified
by the following argument, i.e. the queue is stopped when the current
time is outside the given period.
The argument is the same format as the BSD UUCP L.sys
"time to call" field, that is: a list of one or more comma separated elements,
with each element consisting of any of the following:
Mo, Tu, We, Th, Fr, Sa, Su (Monday, Tuesday, ...),
Any (any time),
Evening	(5pm to 8am, and all day Saturday and Sunday),
Night (11pm to 8am, all day Saturday, and Sunday before 5pm)
Wk (any weekday: Mon. to Fri.).
.sp
The above may optionally be followed by a time range,
in the form nnnn-mmmm where nnnn and mmmm are 24-hour clock times.
The time specifier should contain no white space.
For example, the "Evening" specifier could also be
written as "Wk1700-0800,Sa,Su".
.sp
The queue is active when any one of the time elements matches
the current time.
At other times, no jobs are started, and any running jobs are stopped.
When the queue becomes active again, stopped jobs are restarted.
(Again, the stop/start mechanism works only if the system supports
job control).
.IP timesched\ 
This is the same as
.B timestop,
except that jobs are not stopped when the current time doesn't
match the given time specifier.
In other words, no new jobs are started outside the given time,
and running jobs are allowed to complete (i.e. the queue is drained).
.IP program
The next argument is the name of an executable program.
Before starting each new job in this queue, the program is executed via
.IR system (3),
and its exit status is used to determine if the queue is active.
Exit status 0 means the queue is active, 1 means stop the queue
(and any running jobs),
and 2 means don't schedule new jobs.
The program is passed a single argument, the name of the queue.
Standard input, output and error are all /dev/null.
.PP
If a queue has more than one controlling condition (i.e.
a program or time specifier, or both),
all conditions must be satisfied before new jobs will be started.
.SH "RESOURCE LIMITS"
.PP
The following words take both one and two numbers.
If one number is given, only the current resource limit is set.
If two numbers are given, the current and maximum limits are set.
As explained in
.IR setrlimit (2),
a process is free to raise its current limit to the maximum limit.
These limits are available only on Berkeley UNIX systems.
.IP rlimitcpu
Current and maximum cpu, in seconds.
.I Cpulimit
is also a synonym for this keyword.
.IP rlimitfsize
Current and maximum file size, in bytes.
.IP rlimitdata
Current and maximum size of the data area, in bytes.
.IP rlimitstack
Current and maximum size of the stack, in bytes.
.IP rlimitcore
Current and maximum size of a core dump file, in bytes.
.IP rlimitrss
Current and maximum size of the virtual memory working set, in bytes.
.SH "QUEUE MANAGEMENT"
.PP
When a batch job is submitted via
.IR batch (1),
a SIGALRM signal is sent to the daemon.
The daemon will check
queues which are eligible to run more jobs.
It also checks for changed queue profile files.
In the absence of any batch activity, this checking is done
every 5 minutes.
To wake up the daemon early, send it a SIGALRM signal.
.PP
If a directory disappears all jobs are aborted.
If something strange happens to a particular queue that queue will be
drained. (For example, the profile file is changed and has a syntax error.)
.PP
This program is assumed to have been started at boot time, and have no
controlling tty; hence all errors are mailed to userid ``batch''.
.SH OPTIONS
.IP "\-d directory"
Use
.B directory
as the spool directory.
.IP "\-p file"
Use
.B file
as the ``pidfile''.
Batchd writes its process ID to this file, which is used by the
.IR batch (1)
command to notify batchd of new jobs.
.IP "\-t time"
Specifies the time to wait (in seconds) before scanning the queues.
The default is 300 (5 minutes).
.SH BUGS
The daemon checks the batch queues whenever a new job is submitted,
or a running job ends.  If there is no activity, it will check
every 5 minutes (or the value specified with \fB\-t\fP).
As a result, the accuracy of the
.B timestop
and
.B timesched
commands may be off by as much as that amount.
.SH "SEE ALSO"
batch(1), batchcancel(1), batchqueue(1), batchsignal(1), batchexamine(1).
.SH FILES
.nf
SPOOLDIR		spool directory
LIBDIR/batchd		batch daemon executable
BINDIR/batch		batch job submitter executable
SPOOLDIR/.cleanup	Cleanup script run by cron
SPOOLDIR/.queueorder	Order for batchqueue to display the queues
PIDFILE		Contains process ID of batchd
.fi
